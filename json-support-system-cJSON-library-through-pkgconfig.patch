--- a/vlib/json/cjson/cjson_wrapper.c.v
+++ b/vlib/json/cjson/cjson_wrapper.c.v
@@ -8,8 +8,13 @@
 // that has NULL leaves for example, which is currently not convenient/easy to do with just the
 // high level `json.encode(value)` API that V has.
 
-#flag -I @VEXEROOT/thirdparty/cJSON
-#flag @VEXEROOT/thirdparty/cJSON/cJSON.o
+$if $pkgconfig('libcjson') {
+	#pkgconfig libcjson
+} $else {
+	#flag -I @VEXEROOT/thirdparty/cJSON
+	#flag @VEXEROOT/thirdparty/cJSON/cJSON.o
+}
+
 #include "cJSON.h"
 
 @[typedef]

--- a/vlib/json/json_primitives.c.v
+++ b/vlib/json/json_primitives.c.v
@@ -3,9 +3,15 @@
 // that can be found in the LICENSE file.
 module json
 
-#flag -I @VEXEROOT/thirdparty/cJSON
-#flag @VEXEROOT/thirdparty/cJSON/cJSON.o
+$if $pkgconfig('libcjson') {
+	#pkgconfig libcjson
+} $else {
+	#flag -I @VEXEROOT/thirdparty/cJSON
+	#flag @VEXEROOT/thirdparty/cJSON/cJSON.o
+}
+
 #include "cJSON.h"
+
 #define js_get(object, key) cJSON_GetObjectItemCaseSensitive((object), (key))
 
 pub struct C.cJSON {
